@using Festival.Client.Service
@using Festival.Shared.Models
@using Festival.Shared.Views;
@using System.Net
@using System.Diagnostics
@page "/opretvagt"

<PageTitle>Opret Vagt</PageTitle>

<h3>Opret Vagt</h3>

<EditForm EditContext="@EditContext" class="row p-3"> @*En editform, hvor der kan indtastes oplysninger om den nye vagt som skal oprettes*@

    <h3>Indtast informationer om Vagt</h3>
    <div class="col-md-6 mb-3">
        <label for="StartTid">Indtast vagtens start tid</label>
        <input type="time" id="StartTid" @bind="newVagt.StartTid" bind:format="HH:mm" class="form-control" />
    </div>

    <div class="col-md-6 mb-3">
        <label for="SlutTid">Indtast vagtens slut tid</label>
        <input type="time" id="SlutTid" @bind="newVagt.SlutTid" bind:format="HH:mm" class="form-control" />
    </div>

    <div class="col-md-12 mb-3">
        <label for="Dato">Indtast dato for vagten</label>
        <InputDate id="Dato" @bind-Value="newVagt.Dato" class="form-control" />
    </div>

    <div class="col-md-6 mb-3">
        <label for="Opgave">Vælg typen af opgave</label>
        <InputSelect id="Opgave" @bind-Value="newOpgave.OpgaveID" class="form-control"> @*En dropdown som viser de mulige opgavevalg*@
            @foreach (var item in OpgaveValg)
            {
                <option value="@item.OpgaveID">@item.OpgaveNavn</option>
            }
        </InputSelect>
    </div>

    <div class="col-md-6 mb-3">
        <label for="VagtType">Indtast typen af vagt</label>
        <InputText id="VagtType" @bind-Value="newVagt.VagtType" class="form-control" />
    </div>

    @*Nedenfor en knap som udfører metoden til at oprette en ny vagt*@
    <button type="submit" style="background-color:#198725" class="button" @onclick="NyVagt">Opret</button>
    <br />
    <p>Meddelelse: </p><label style="color: green"><b>@Meddelelse</b></label>
</EditForm>




@code {

    [Inject]
    public IVagtService VagtService { get; set; }
    [Inject]
    public IOpgaveService OpgaveService { get; set; }

    Vagt newVagt = new Vagt(); 
    Opgaver newOpgave = new Opgaver(); 
    private List<Vagt> VagtListe = new List<Vagt>(); 
    private int[] opgaveValg = { 1, 2, 3 }; 
    private Opgaver[] OpgaveValg = { }; 
    private EditContext EditContext; 
    private int ErrorCode { get; set; } = 0; 
    private string Meddelelse { get; set; } = ""; 

    protected override async Task OnInitializedAsync() //Når initialiseret sker koden inde i denne metode
    {
        EditContext = new EditContext(newVagt);
        OpgaveValg = (await OpgaveService.GetAllOpgaver()); //Henter alle opgaver(data)
        newVagt.OpgaveID = opgaveValg[0]; //viser det første opgavevalg i arrayet som default i InputSelect.
    }


    private async Task NyVagt() //Metode til at oprette en ny vagt
    {
        Console.WriteLine("on submit vagt called: opgave id = " + newOpgave.OpgaveID);
        newVagt.OpgaveID = newOpgave.OpgaveID;
        ErrorCode = await VagtService.AddVagt(newVagt); //opretter den nye vagt
        newVagt.OpgaveID = opgaveValg[0]; //nuslstiller opgavevalget i InputSelect til det første i arrayet
        Console.WriteLine("Vagt added: return code: " + ErrorCode);

        if (ErrorCode == 200)
        {
            Meddelelse = "Din vagt er blevet oprettet!";
            Vagt newVagt = new Vagt();
            EditContext = new EditContext(newVagt);
        }
    }
}
